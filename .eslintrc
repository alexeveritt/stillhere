{
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "sourceType": "module",
    "ecmaVersion": 2020
  },
  "extends": [
    "eslint:recommended",
    "prettier", "plugin:jest/recommended",
    "plugin:@typescript-eslint/recommended"
  ],
  "overrides": [
    {
      "files": ["*.ts"],

      // As mentioned in the comments, you should extend TypeScript plugins here,
      // instead of extending them outside the `overrides`.
      // If you don't want to extend any rules, you don't need an `extends` attribute.
      "extends": [
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking"
      ],

      "parserOptions": {
        "project": ["./tsconfig.json"] // Specify it only for TypeScript files
      },
      "rules": {
        "semi": [1, "always"],
        "@typescript-eslint/explicit-module-boundary-types": "off",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-inferrable-types": "off",
        "no-control-regex": "off",
        "no-useless-escape": "off",
        "@typescript-eslint/no-unsafe-member-access": "off",
        "@typescript-eslint/no-unsafe-call": "off",
        "@typescript-eslint/no-unsafe-return": "off",
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/no-unsafe-argument": "off",
        "@typescript-eslint/no-floating-promises": [
          2,
          {
            "ignoreIIFE": true,
            "ignoreVoid": true
          }
        ]
      }
    }
  ],
  "rules": {
    "semi": [1, "always"],
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/no-explicit-any": "off",
    "@typescript-eslint/no-inferrable-types": "off",
    "no-control-regex": "off",
    "no-useless-escape": "off"
  },
  "plugins": ["@typescript-eslint", "jest"],
  "env": {
    "es6": true,
    "node": true,
    "jest/globals": true
  },
  "ignorePatterns": ["dist", "node_modules", "examples", "scripts", "**/lib/*"]
}
